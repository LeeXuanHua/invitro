name: End-to-End Tests

on:
 schedule:
   - cron: "0 9 * * 1"
 workflow_dispatch:
 push:
   branches: [main, aws-e2e]
 pull_request:
   branches: [main]

env:
  GOOS: linux
  GO111MODULE: on

jobs:
  test-knative:
    name: Test Knative Deployment
    env:
      KIND_VERSION: v0.22.0
      K8S_VERSION: v1.29
      YAML_DIR: workloads/container

    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        service:
          [
            trace_func_go,
          ]
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: "true"
      - name: Checkout LFS objects
        run: git lfs checkout

      - uses: actions/setup-go@v5
        with:
          go-version: 1.22

      - name: Create k8s Kind Cluster
        run: bash ./scripts/konk-ci/01-kind.sh

      - name: Install Serving
        run: bash ./scripts/konk-ci/02-serving.sh

      - name: Install Kourier
        run: bash ./scripts/konk-ci/02-kourier.sh

      - name: Setup domain and autoscaler
        run: |
          INGRESS_HOST="127.0.0.1"
          KNATIVE_DOMAIN=$INGRESS_HOST.sslip.io
          kubectl patch configmap -n knative-serving config-domain -p "{\"data\": {\"$KNATIVE_DOMAIN\": \"\"}}"
          kubectl patch configmap -n knative-serving config-autoscaler -p "{\"data\": {\"allow-zero-initial-scale\": \"true\"}}"
          kubectl patch configmap -n knative-serving config-features -p "{\"data\": {\"kubernetes.podspec-nodeselector\": \"enabled\"}}"
          kubectl label node knative-control-plane loader-nodetype=worker

      - name: Build and run loader
        run: go run cmd/loader.go --config pkg/config/test_config.json

      - name: Check the output
        run: test -f "data/out/experiment_duration_5.csv" && test $(grep true data/out/experiment_duration_5.csv | wc -l) -eq 0 # test the output file for errors (true means failure to invoke)

      - name: Print logs
        if: ${{ always() }}
        run: |
          set -x
          container_list=$(kubectl get pods -n default -o jsonpath="{.items[*].spec.containers[*].name}")
          for container_name in $container_list
          do
            kubectl logs -n default -c $container_name -l serving.knative.dev/service=${{ matrix.service }}
          done
      - name: Down
        if: ${{ always() }}
        run: |
          kn service delete --all

  test-cloud:
    name: Test Cloud Deployment
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        service:
          [
            aws,
          ]
    concurrency:
        group: ${{ github.workflow }}-${{ matrix.service }}
        cancel-in-progress: false
    steps:
      - name: Checkout GitHub Code
        uses: actions/checkout@v3
        with:
          lfs: "true"

      - name: Checkout LFS objects
        run: git lfs checkout

      # AWS CLI v2 and Docker Client & Server v24 are pre-installed
      - name: Install Golang (Ubuntu 20.04 Cached Tool)
        uses: actions/setup-go@v5
        with:
          go-version: 1.22

      - name: Install Node.js (Ubuntu 20.04 Cached Tool)
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Serverless.com Framework
        run: sudo npm install -g serverless

      - name: Update cmd/config.json for AWS Deployment
        # Change "Platform": "Knative" to "Platform": "AWSLambda"
        run: |
          sed -i 's/"Platform": "Knative"/"Platform": "AWSLambda"/g' cmd/config.json

      - name: Build and run loader
        run: go run cmd/loader.go --config cmd/config.json

      - name: Check the output
        run: test -f "data/out/experiment_duration_5.csv" && test $(grep true data/out/experiment_duration_5.csv | wc -l) -eq 0 # test the output file for errors (true means failure to invoke)